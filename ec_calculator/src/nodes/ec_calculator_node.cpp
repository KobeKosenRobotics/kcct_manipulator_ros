#include "ec_calculator/model.h"
#include "ec_calculator/manipulator.h"
#include "ec_calculator/manipulator_tf_publisher.h"
#include "ec_calculator/eigenUtility.h"

#include <std_msgs/Bool.h>
#include <std_msgs/Int16.h>
#include <std_msgs/Float32MultiArray.h>

#include <ros/ros.h>

using namespace ec_calculator;

Manipulator manip;
ManipulatorTFPublisher tfPublisher(manip);
Model model;

ros::Time start, end;
double sum = 0;
int cycle = 0;
bool free_fall = false;

// Publisher
std_msgs::Float32MultiArray target_angular_velocity;
std_msgs::Float32MultiArray target_torque;

// Subscriber
std_msgs::Bool emergency_stop;
std_msgs::Bool ik_enable;
std_msgs::Bool motor_enable;
std_msgs::Bool simulation_enable;
std_msgs::Bool torque_enable;

std_msgs::Int16 gain;

std_msgs::Float32MultiArray angle;
std_msgs::Float32MultiArray angular_velocity;
std_msgs::Float32MultiArray angular_acceleration;
std_msgs::Float32MultiArray torque;

std_msgs::Float32MultiArray target_angle;
std_msgs::Float32MultiArray target_pose;    // 2: start_joint, end_joint, 6: 3position, 3orientation

void emergency_stop_cb(std_msgs::Bool::ConstPtr msg)
{
    // free_fall = true;
    manip.setEmergencyStop(msg->data);
}

void ik_enable_cb(std_msgs::Bool::ConstPtr msg)
{
    manip.setIKEnable(msg->data);
}

void motor_enable_cb(std_msgs::Bool::ConstPtr msg)
{
    manip.setMotorEnable(msg->data);
}

void simulation_enable_cb(std_msgs::Bool::ConstPtr msg)
{
    manip.setSimulationEnable(msg->data);
}

void torque_enable_cb(std_msgs::Bool::ConstPtr msg)
{
    manip.setTorqueEnable(msg->data);
}

void gain_cb(std_msgs::Int16::ConstPtr msg)
{
    manip.setAngleTorqueControlPGain(msg->data);
}

void angle_cb(std_msgs::Float32MultiArray::ConstPtr msg)
{
    if(manip.getMotorEnable())
    {
        manip.updateAngle(EigenUtility.array2Matrix(msg->data));
    }
}

void angular_velocity_cb(std_msgs::Float32MultiArray::ConstPtr msg)
{
    manip.updateAngularVelocity(EigenUtility.array2Matrix(msg->data));
}

void angular_acceleration_cb(std_msgs::Float32MultiArray::ConstPtr msg)
{
    manip.updateAngularAcceleration(EigenUtility.array2Matrix(msg->data));
}

void torque_cb(std_msgs::Float32MultiArray::ConstPtr msg)
{
    manip.updateTorque(EigenUtility.array2Matrix(msg->data));
}

void target_angle_cb(std_msgs::Float32MultiArray::ConstPtr msg)
{
    manip.setTargetAngle(EigenUtility.array2Matrix(msg->data));
}

void target_pose_cb(std_msgs::Float32MultiArray::ConstPtr msg)
{
    manip.setTargetPose(EigenUtility.array2Matrix(msg->data));
}

int main(int argc, char **argv)
{
    ros::init(argc, argv, "ECCalculator");
    ros::NodeHandle nh;
    double rate = 100.0;
    ros::Rate loop_rate(rate);

    // Publisher
    ros::Publisher target_angular_velocity_pub = nh.advertise<std_msgs::Float32MultiArray>("target_angular_velocity", 100);
    ros::Publisher target_torque_pub = nh.advertise<std_msgs::Float32MultiArray>("target_torque", 100);

    // Subscriber
    ros::Subscriber emergency_stop_sub = nh.subscribe<std_msgs::Bool>("emergency_stop", 100, emergency_stop_cb);
    ros::Subscriber ik_enable_sub = nh.subscribe<std_msgs::Bool>("ik_enable", 10, ik_enable_cb);
    ros::Subscriber motor_enable_sub = nh.subscribe<std_msgs::Bool>("motor_enable", 10, motor_enable_cb);
    ros::Subscriber simulation_enable_sub = nh.subscribe<std_msgs::Bool>("simulation_enable", 10, simulation_enable_cb);
    ros::Subscriber torque_enable_sub = nh.subscribe<std_msgs::Bool>("torque_enable", 10, torque_enable_cb);
    ros::Subscriber gain_sub = nh.subscribe<std_msgs::Int16>("gain", 10, gain_cb);
    ros::Subscriber angle_sub = nh.subscribe<std_msgs::Float32MultiArray>("angle", 10, angle_cb);
    ros::Subscriber angular_velocity_sub = nh.subscribe<std_msgs::Float32MultiArray>("angular_velocity", 10, angular_velocity_cb);
    ros::Subscriber angular_acceleration_sub = nh.subscribe<std_msgs::Float32MultiArray>("angular_acceleration", 10, angular_acceleration_cb);
    ros::Subscriber torque_sub = nh.subscribe<std_msgs::Float32MultiArray>("torque", 10, torque_cb);
    ros::Subscriber target_angle_sub = nh.subscribe<std_msgs::Float32MultiArray>("target_angle", 10, target_angle_cb);
    ros::Subscriber target_pose_sub = nh.subscribe<std_msgs::Float32MultiArray>("target_pose", 10, target_pose_cb);
    target_pose.data.resize(2+6);   // 2: start_joint, end_joint, 6: 3position, 3orientation

    manip.init(&model);
    manip.printTree();
    target_angular_velocity.data.resize(manip.getJointNum());
    target_torque.data.resize(manip.getJointNum());
    target_angle.data.resize(manip.getJointNum());

    // /* New naviT(oo)n */
    // int cha = 1, joi = 8;
    // Eigen::Matrix<bool, 1, 8> cha_ma;
    // for(int i = 0; i < joi; i++)
    // {
    //     cha_ma(0, i) = 1;
    // }
    // Eigen::Matrix<double, 3, 9> joi_po;
    // joi_po <<
    //     0, 0, 0, 0.01, 0.030,  0.030, 0,  0    , 0,
    //     0, 0, 0, 0   , 0.264, -0.258, 0,  0    , 0,
    //     0, 0, 0, 0   , 0    ,  0,     0, -0.123, 0;
    // Eigen::Matrix<double, 3, 8> tra;
    // tra.setZero();
    // tra(0, 0) = 1;
    // tra(1, 1) = 1;
    // tra(2, 2) = 1;
    // Eigen::Matrix<double, 3, 8> rot;
    // rot <<
    //     0, 0, 0,  0,  0,  0, 1,  0,
    //     0, 0, 0,  0,  0, -1, 0,  0,
    //     0, 0, 0, -1, -1,  0, 0, -1;
    // Eigen::Matrix<double, 8, 8> a2a_ga;
    // a2a_ga.setIdentity();
    // double ec_ga = 1;

    // model.changeModel(cha, joi, cha_ma, joi_po, tra, rot, a2a_ga, ec_ga);

    // manip.init(&model);
    // manip.printTree();
    // manip.print();
    // target_angular_velocity.data.resize(manip.getJointNum());
    // target_torque.data.resize(manip.getJointNum());
    // target_angle.data.resize(manip.getJointNum());

    // /* Serial 30-DOF */
    // int cha = 1, joi = 30;
    // Eigen::Matrix<bool, 1, 30> cha_ma;
    // for(int i = 0; i < joi; i++)
    // {
    //     cha_ma(0, i) = 1;
    // }
    // Eigen::Matrix<double, 3, 31> joi_po;
    // joi_po.setZero();
    // for(int i = 4; i < (cha+joi); i++)
    // {
    //     joi_po(2,i) = 0.2;
    // }
    // Eigen::Matrix<double, 3, 30> tra;
    // tra.setZero();
    // tra(0, 0) = 1;
    // tra(1, 1) = 1;
    // tra(2, 2) = 1;
    // Eigen::Matrix<double, 3, 30> rot;
    // rot.setZero();
    // for(int i = 3; i < joi; i++)
    // {
    //     rot(i%3, i) = 1;
    // }
    // Eigen::Matrix<double, 30, 30> a2a_ga;
    // a2a_ga.setIdentity();
    // double ec_ga = 2;

    // model.changeModel(cha, joi, cha_ma, joi_po, tra, rot, a2a_ga, ec_ga);

    // manip.init(&model);
    // manip.printTree();
    // manip.print();
    // target_angular_velocity.data.resize(manip.getJointNum());
    // target_torque.data.resize(manip.getJointNum());
    // target_angle.data.resize(manip.getJointNum());

    // /* Chain 30-DOF */
    // int cha = 3, joi = 30;
    // Eigen::Matrix<bool, 3, 30> cha_ma;
    // cha_ma <<
    //     //             5                         14             19          23                29
    //     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    //     1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
    //     1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1;
    // Eigen::Matrix<double, 3, 33> joi_po;
    // joi_po.setZero();
    // for(int i = 4; i < (cha+joi); i++)
    // {
    //     joi_po(2,i) = 0.2;
    // }
    // joi_po(0, 15) = 0.2;
    // joi_po(0, 24) = 0.2;
    // Eigen::Matrix<double, 3, 30> tra;
    // tra.setZero();
    // tra(0, 0) = 1;
    // tra(1, 1) = 1;
    // tra(2, 2) = 1;
    // Eigen::Matrix<double, 3, 30> rot;
    // rot.setZero();
    // for(int i = 3; i < joi; i++)
    // {
    //     rot(i%3, i) = 1;
    // }
    // Eigen::Matrix<double, 30, 30> a2a_ga;
    // a2a_ga.setIdentity();
    // double ec_ga = 2;

    // model.changeTorqueControlEnable(false);
    // model.changeModel(cha, joi, cha_ma, joi_po, tra, rot, a2a_ga, ec_ga);

    // manip.init(&model);
    // manip.printTree();
    // manip.print();
    // target_angular_velocity.data.resize(manip.getJointNum());
    // target_torque.data.resize(manip.getJointNum());
    // target_angle.data.resize(manip.getJointNum());

    /* check Motion Equation */
    Eigen::Matrix<double, 470, 8> torque_data;
    torque_data << // 251~720   rows = 720-250 = 470;
        1500, 46.3, -0.24612, -0.566428, 0.26544, 0.70784, -0.24648, 0.1896, 
        1501, 46.33, -0.22268, -0.0944046, 0.26544, 0.79632, -0.2844, 0.13272, 
        1502, 46.3609, -0.24612, -0.0944046, 0, 0, -0.13272, 0.2844, 
        1503, 46.391, -0.24026, -0.0944046, 0.26544, -0.08848, -0.22752, 0.36024, 
        1504, 46.4209, -0.22854, -0.0944046, 0, 0, -0.32232, 0.39816, 
        1505, 46.451, -0.2344, -0.0944046, 0, -0.08848, -0.22752, 0.43608, 
        1506, 46.482, -0.24026, -0.0944046, 0.26544, -0.97328, 0, 0.41712, 
        1507, 46.5119, -0.2344, -0.0944046, 0.26544, -1.41568, 0.0948, 0.39816, 
        1508, 46.5419, -0.22854, -0.188809, 0, -1.59264, 0.15168, 0.30336, 
        1509, 46.5719, -0.24026, -0.0944046, 0, -1.15024, 0.20856, 0, 
        1510, 46.6029, -0.22854, -0.0944046, 0.61936, -1.50416, 0.26544, -0.01896, 
        1511, 46.6339, -0.24612, -0.0944046, 0, -0.08848, 0.11376, -0.20856, 
        1512, 46.6658, -0.22268, -0.0944046, 0.4424, -0.08848, 0.30336, -0.17064, 
        1513, 46.6958, -0.22854, -0.0944046, 0, -0.08848, 0, -0.20856, 
        1514, 46.7258, -0.24612, -0.0944046, 0.26544, 0, 0, -0.24648, 
        1515, 46.7559, -0.26956, -0.0944046, 0.4424, 0, 0, -0.1896, 
        1516, 46.7858, -0.24026, -0.0944046, 0.26544, 0, 0, -0.20856, 
        1517, 46.8158, -0.25198, -0.944046, 0.4424, 0, -0.26544, -0.24648, 
        1518, 46.8458, -0.22854, -0.0944046, 0, 0, -0.22752, 0.03792, 
        1519, 46.8758, -0.24026, -0.0944046, 0.53088, 0, -0.20856, 0.03792, 
        1520, 46.9058, -0.2344, -0.849641, 0, -0.08848, -0.30336, 0, 
        1521, 46.9358, -0.22854, -0.0944046, 0.26544, 0, -0.36024, 0.13272, 
        1522, 46.9657, -0.22268, -0.566428, 0, -0.53088, 0, 0, 
        1523, 46.9958, -0.26956, 0.188809, 0.35392, -0.08848, 0, -0.0948, 
        1524, 47.0257, -0.24026, 0.849641, 0.70784, 0, 0.26544, -0.11376, 
        1525, 47.0557, -0.16408, 0.188809, 0.8848, 0, 0.26544, -0.11376, 
        1526, 47.0857, -0.11134, 0.566428, 1.06176, 0, 0.22752, -0.11376, 
        1527, 47.1158, -0.11134, 1.22726, 1.15024, 0.35392, 0.26544, -0.17064, 
        1528, 47.1457, 0.46294, 1.03845, 1.7696, 0.70784, 0.34128, 0, 
        1529, 47.1767, 0.94346, 0.283214, 2.6544, 1.41568, 0.22752, 0.20856, 
        1530, 47.2067, 1.30678, 0.566428, 2.56592, 1.85808, 0.32232, 0.20856, 
        1531, 47.2367, 1.45914, 0, 2.6544, 2.03504, 0.45504, 0.22752, 
        1532, 47.2667, 1.7287, 1.32166, 3.0968, 1.94656, 0.49296, 0.26544, 
        1533, 47.2967, 1.92208, 1.32166, 3.27376, 2.12352, 0.60672, 0.34128, 
        1534, 47.3267, 1.91036, 1.41607, 3.5392, 2.6544, 0.62568, 0.41712, 
        1535, 47.3577, 1.91622, 2.83214, 3.36224, 2.12352, 0.79632, 0.474, 
        1536, 47.3877, 2.06272, 2.92654, 3.5392, 2.03504, 0.8532, 0.36024, 
        1537, 47.4176, 2.15062, 2.0769, 4.95488, 3.27376, 0.87216, 0.45504, 
        1538, 47.4486, 2.0217, 4.53142, 5.48576, 3.27376, 0.77736, 0.41712, 
        1539, 47.4786, 2.0217, 5.66428, 6.1936, 3.89312, 0.79632, 0.5688, 
        1540, 47.5086, 2.02756, 6.32511, 6.98992, 4.15856, 0.81528, 0.51192, 
        1541, 47.5386, 1.95724, 5.28666, 6.54752, 3.89312, 0.81528, 0.474, 
        1542, 47.5686, 1.85762, 6.51392, 6.45904, 4.33552, 0.81528, 0.49296, 
        1543, 47.5986, 1.93966, 4.72023, 6.98992, 3.89312, 0.89112, 0.45504, 
        1544, 47.6286, 2.12718, 6.32511, 6.98992, 4.51248, 0.89112, 0.62568, 
        1545, 47.6586, 1.89278, 5.19225, 5.22032, 4.07008, 0.91008, 0.70152, 
        1546, 47.6885, 2.18578, 6.79713, 5.57424, 4.24704, 0.87216, 0.7584, 
        1547, 47.7205, 2.35572, 3.39857, 7.16688, 4.51248, 1.02384, 0.83424, 
        1548, 47.7505, 1.96896, 4.81463, 6.98992, 4.24704, 0.92904, 0.87216, 
        1549, 47.7805, 2.05686, 5.94749, 7.0784, 4.07008, 0.96696, 1.02384, 
        1550, 47.8105, 2.15648, 6.70273, 7.0784, 4.33552, 0.96696, 1.0428, 
        1551, 47.8405, 1.95724, 3.58737, 5.39728, 4.33552, 1.08072, 1.1376, 
        1552, 47.8705, 2.20336, 4.43702, 7.60928, 4.60096, 0.96696, 1.09968, 
        1553, 47.9005, 2.1682, 3.58737, 6.28208, 4.24704, 0.96696, 0.68256, 
        1554, 47.9305, 2.39088, 3.68178, 6.54752, 3.9816, 0.92904, 1.25136, 
        1555, 47.9605, 2.27368, 4.81463, 7.78624, 4.51248, 1.17552, 1.36512, 
        1556, 47.9904, 2.27368, 6.1363, 8.67104, 4.07008, 0.98592, 1.1376, 
        1557, 48.0204, 2.05686, 5.56987, 6.45904, 4.33552, 1.08072, 1.28928, 
        1558, 48.0515, 2.07444, 5.66428, 6.1936, 4.15856, 1.02384, 1.28928, 
        1559, 48.0825, 2.17406, 3.96499, 7.25536, 4.24704, 0.96696, 0.98592, 
        1560, 48.1145, 2.3147, 5.00344, 6.37056, 4.424, 0.68256, 0.64464, 
        1561, 48.1465, 2.09202, 4.24821, 6.636, 3.62768, 0.7584, 0.89112, 
        1562, 48.1784, 2.1096, 4.1538, 7.69776, 3.89312, 0.83424, 0.96696, 
        1563, 48.2115, 2.09202, 3.77618, 8.93648, 4.424, 0.98592, 0.91008, 
        1564, 48.2444, 2.051, 4.53142, 6.98992, 3.62768, 0.79632, 1.00488, 
        1565, 48.2764, 2.36744, 5.28666, 8.31712, 4.07008, 0.79632, 0.948, 
        1566, 48.3094, 2.34986, 4.43702, 8.22864, 3.80464, 0.89112, 0.474, 
        1567, 48.3403, 2.08616, 4.81463, 8.67104, 3.80464, 0.83424, 0.62568, 
        1568, 48.3704, 2.25024, 3.68178, 10.2637, 4.24704, 1.1376, 0.62568, 
        1569, 48.4004, 2.2854, 3.39857, 7.0784, 3.62768, 0.87216, 0.5688, 
        1570, 48.4313, 2.1682, 3.58737, 8.49408, 3.9816, 0.68256, 0.43608, 
        1571, 48.4624, 2.14476, 4.24821, 7.60928, 3.9816, 0.96696, 0.3792, 
        1572, 48.4923, 2.344, 4.1538, 9.55584, 3.89312, 0.83424, 0.32232, 
        1573, 48.5223, 2.35572, 3.30416, 8.22864, 3.89312, 0.8532, 0.30336, 
        1574, 48.5523, 2.4612, 3.49297, 7.60928, 4.07008, 0.79632, 0.39816, 
        1575, 48.5833, 2.23266, 4.43702, 8.22864, 3.80464, 0.7584, 0.62568, 
        1576, 48.6143, 2.24438, 4.1538, 7.34384, 3.71616, 0.70152, 0.62568, 
        1577, 48.6463, 2.43776, 4.0594, 7.78624, 3.45072, 0.87216, 0.62568, 
        1578, 48.6773, 2.12132, 3.68178, 9.20192, 4.15856, 0.87216, 0.70152, 
        1579, 48.7093, 2.1096, 3.87059, 8.49408, 3.71616, 0.79632, 0.64464, 
        1580, 48.7423, 2.23266, 4.1538, 8.31712, 3.89312, 0.81528, 0.64464, 
        1581, 48.7722, 2.36158, 3.77618, 9.37888, 4.33552, 0.92904, 0.64464, 
        1582, 48.8023, 2.42018, 2.45452, 10.4406, 4.07008, 0.92904, 0.474, 
        1583, 48.8332, 2.50222, 3.58737, 8.14016, 3.5392, 0.7584, 0.49296, 
        1584, 48.8632, 2.25024, 4.90904, 7.78624, 3.62768, 0.73944, 0.49296, 
        1585, 48.8942, 2.1096, 6.1363, 8.4056, 3.89312, 0.92904, 0.39816, 
        1586, 48.9242, 1.98654, 4.1538, 7.78624, 4.07008, 0.89112, 0.3792, 
        1587, 48.9542, 2.26196, 5.56987, 8.67104, 3.80464, 0.92904, 0.32232, 
        1588, 48.9872, 2.32056, 5.19225, 9.7328, 3.80464, 0.81528, 0.2844, 
        1589, 49.0182, 2.20922, 5.00344, 8.4056, 4.07008, 0.8532, 0.77736, 
        1590, 49.0502, 2.23852, 6.41951, 8.848, 3.80464, 0.7584, 0.58776, 
        1591, 49.0832, 2.27368, 5.75868, 10.7061, 3.9816, 0.81528, 0.49296, 
        1592, 49.1141, 2.03342, 3.68178, 8.67104, 3.71616, 0.73944, 0.3792, 
        1593, 49.1452, 2.1096, 4.43702, 10.3522, 3.89312, 0.64464, 0.3792, 
        1594, 49.1781, 2.19164, 4.90904, 8.93648, 3.89312, 0.72048, 0.36024, 
        1595, 49.2101, 2.03342, 3.02095, 10.4406, 3.9816, 0.68256, 0.34128, 
        1596, 49.2411, 2.15648, 4.24821, 8.848, 3.80464, 0.45504, 0.41712, 
        1597, 49.2731, 2.25024, 3.39857, 10.0867, 4.15856, 0.474, 0.32232, 
        1598, 49.3041, 2.29126, 3.68178, 10.2637, 4.60096, 0.62568, 0.43608, 
        1599, 49.335, 2.32642, 1.9825, 12.1218, 4.51248, 0.51192, 0.34128, 
        1600, 49.365, 2.22094, 2.17131, 10.5291, 4.424, 0.45504, 0.3792, 
        1601, 49.396, 2.1682, 3.77618, 10.6176, 4.51248, 0.58776, 0.49296, 
        1602, 49.4261, 2.29126, 4.0594, 9.90976, 4.07008, 0.51192, 0.49296, 
        1603, 49.4561, 1.9631, 2.54892, 10.1752, 4.424, 0.53088, 0.5688, 
        1604, 49.488, 2.2268, 3.02095, 11.5024, 4.33552, 0.49296, 0.49296, 
        1605, 49.521, 2.34986, 3.39857, 9.99824, 4.60096, 0.45504, 0.41712, 
        1606, 49.552, 2.27368, 5.00344, 8.75952, 4.07008, 0.2844, 0.53088, 
        1607, 49.582, 2.12718, 3.77618, 7.60928, 4.424, 0.39816, 0.58776, 
        1608, 49.612, 1.9631, 3.02095, 8.93648, 4.51248, 0.32232, 0.60672, 
        1609, 49.642, 2.1682, 5.38106, 8.93648, 4.51248, 0.36024, 0.474, 
        1610, 49.6719, 2.1682, 4.43702, 6.98992, 4.51248, 0.41712, 0.39816, 
        1611, 49.702, 1.86348, 5.94749, 9.11344, 4.60096, 0.41712, 0.43608, 
        1612, 49.732, 2.11546, 3.39857, 7.43232, 4.51248, 0.43608, 0.474, 
        1613, 49.762, 1.95724, 6.51392, 8.848, 4.68944, 0.474, 0.58776, 
        1614, 49.7919, 2.20922, 5.19225, 10.4406, 4.424, 0.49296, 0.60672, 
        1615, 49.8219, 2.2854, 6.60832, 12.0333, 4.68944, 0.53088, 0.77736, 
        1616, 49.8529, 2.26196, 4.43702, 8.58256, 4.77792, 0.474, 1.21344, 
        1617, 49.8859, 2.1389, 6.1363, 9.20192, 4.68944, 0.7584, 1.09968, 
        1618, 49.9169, 2.14476, 5.38106, 9.64432, 5.04336, 0.51192, 0.81528, 
        1619, 49.9489, 2.60184, 3.02095, 9.82128, 5.04336, 0.7584, 1.00488, 
        1620, 49.9809, 2.33228, 3.20976, 9.55584, 5.13184, 0.77736, 1.15656, 
        1621, 50.0119, 2.38502, 2.83214, 9.7328, 5.3088, 0.72048, 0.77736, 
        1622, 50.0419, 2.23852, 3.39857, 10.3522, 4.8664, 0.60672, 0.89112, 
        1623, 50.0718, 2.22094, 2.92654, 10.4406, 5.13184, 0.6636, 0.70152, 
        1624, 50.1018, 2.35572, 2.26571, 10.4406, 5.39728, 0.70152, 0.7584, 
        1625, 50.1318, 2.16234, 1.88809, 9.7328, 5.3088, 0.64464, 0.7584, 
        1626, 50.1618, 2.26782, 1.32166, 8.49408, 5.39728, 0.70152, 0.81528, 
        1627, 50.1918, 2.40846, 1.88809, 8.75952, 5.48576, 0.72048, 0.77736, 
        1628, 50.2218, 2.29712, 2.36012, 8.58256, 5.83968, 0.72048, 0.70152, 
        1629, 50.2518, 2.26782, 2.73773, 8.14016, 5.48576, 0.83424, 0.39816, 
        1630, 50.2818, 2.3147, 3.39857, 7.0784, 5.48576, 0.8532, 0.45504, 
        1631, 50.3128, 2.12718, 1.79369, 8.22864, 5.39728, 0.77736, 0.70152, 
        1632, 50.3438, 2.22094, 5.28666, 7.78624, 5.3088, 0.73944, 0.64464, 
        1633, 50.3738, 2.29126, 3.11535, 8.22864, 5.92816, 0.72048, 0.58776, 
        1634, 50.4038, 2.20336, 3.39857, 5.83968, 5.66272, 0.79632, 0.92904, 
        1635, 50.4348, 1.95138, 6.04189, 8.75952, 5.39728, 0.89112, 0.68256, 
        1636, 50.4667, 2.32642, 4.24821, 8.31712, 5.57424, 0.7584, 0.6636, 
        1637, 50.4987, 2.2268, 3.96499, 8.93648, 5.3088, 0.77736, 0.73944, 
        1638, 50.5287, 2.39088, 3.20976, 8.67104, 4.8664, 0.79632, 0.62568, 
        1639, 50.5597, 2.19164, 3.02095, 8.75952, 5.04336, 0.73944, 0.79632, 
        1640, 50.5897, 2.22094, 1.69928, 9.82128, 4.95488, 0.70152, 0.83424, 
        1641, 50.6207, 2.03342, 1.60488, 9.99824, 5.13184, 0.81528, 0.7584, 
        1642, 50.6517, 2.25024, 1.88809, 8.49408, 4.8664, 0.72048, 1.02384, 
        1643, 50.6817, 2.12718, 1.9825, 8.58256, 5.13184, 0.7584, 1.08072, 
        1644, 50.7117, 2.16234, 0.472023, 8.93648, 5.13184, 0.73944, 1.06176, 
        1645, 50.7426, 1.91036, 1.51047, 7.43232, 5.13184, 1.40304, 0.89112, 
        1646, 50.7727, 2.30884, 1.51047, 7.0784, 4.77792, 0.81528, 0.91008, 
        1647, 50.8036, 2.14476, 2.0769, 6.636, 5.39728, 1.15656, 0.83424, 
        1648, 50.8336, 2.2268, 1.41607, 5.57424, 4.60096, 0.948, 1.11864, 
        1649, 50.8646, 2.11546, 1.60488, 5.22032, 4.8664, 0.96696, 0.98592, 
        1650, 50.8946, 2.19164, 1.22726, 5.39728, 4.77792, 0.92904, 1.21344, 
        1651, 50.9246, 2.00412, 2.54892, 4.95488, 4.95488, 0.7584, 1.08072, 
        1652, 50.9546, 2.051, 2.26571, 5.7512, 5.04336, 0.77736, 1.09968, 
        1653, 50.9846, 1.92208, 1.9825, 4.24704, 4.8664, 0.7584, 0.98592, 
        1654, 51.0145, 2.13304, 2.45452, 5.83968, 4.24704, 0.73944, 1.19448, 
        1655, 51.0446, 2.09202, 2.73773, 4.95488, 4.24704, 0.72048, 1.64952, 
        1656, 51.0745, 2.38502, 2.45452, 6.01664, 4.33552, 0.70152, 1.53576, 
        1657, 51.1045, 2.15062, 2.36012, 5.22032, 4.33552, 0.68256, 1.68744, 
        1658, 51.1345, 2.18578, 2.36012, 4.95488, 4.15856, 0.68256, 2.37, 
        1659, 51.1645, 2.18578, 1.41607, 5.3088, 4.68944, 0.58776, 2.2752, 
        1660, 51.1945, 2.20922, 0.849641, 7.16688, 4.68944, 0.53088, 2.40792, 
        1661, 51.2245, 2.29126, 1.22726, 5.83968, 4.51248, 0.54984, 1.72536, 
        1662, 51.2545, 2.09202, 0.944046, 5.92816, 4.24704, 0.51192, 1.66848, 
        1663, 51.2845, 2.39674, 1.22726, 7.25536, 4.15856, 0.53088, 1.38408, 
        1664, 51.3155, 2.42604, 1.41607, 7.43232, 4.33552, 0.45504, 1.76328, 
        1665, 51.3455, 2.39674, 1.32166, 6.72448, 3.71616, 0.45504, 1.49784, 
        1666, 51.3764, 2.2854, 2.17131, 6.81296, 4.15856, 0.51192, 1.95288, 
        1667, 51.4065, 2.42604, 1.88809, 7.34384, 4.07008, 0.5688, 1.7064, 
        1668, 51.4375, 2.43776, 1.51047, 6.37056, 3.80464, 0.474, 2.14248, 
        1669, 51.4695, 2.27368, 1.03845, 6.54752, 3.80464, 0.53088, 1.91496, 
        1670, 51.5005, 2.35572, 2.0769, 6.45904, 4.15856, 0.64464, 2.14248, 
        1671, 51.5304, 2.4612, 2.92654, 6.72448, 4.24704, 0.6636, 1.85808, 
        1672, 51.5604, 2.33228, 2.36012, 4.77792, 4.07008, 0.64464, 1.74432, 
        1673, 51.5904, 2.27954, 1.9825, 7.16688, 4.24704, 0.5688, 1.00488, 
        1674, 51.6204, 2.39674, 1.60488, 7.60928, 4.424, 0.58776, 0.73944, 
        1675, 51.6504, 2.2561, 1.13286, 7.9632, 4.24704, 0.5688, 0.64464, 
        1676, 51.6804, 2.10374, 0.849641, 7.25536, 3.89312, 0.54984, 0.474, 
        1677, 51.7114, 2.55496, 0, 9.2904, 3.80464, 0.39816, 0.3792, 
        1678, 51.7424, 2.23852, 0.472023, 8.05168, 4.51248, 0.51192, 0.70152, 
        1679, 51.7743, 2.01584, 0.660832, 7.69776, 4.424, 0.60672, 0.32232, 
        1680, 51.8043, 2.63114, 0.472023, 8.49408, 4.68944, 0.60672, 0.3792, 
        1681, 51.8354, 2.15648, 1.60488, 7.69776, 4.68944, 0.49296, 0.70152, 
        1682, 51.8663, 2.23852, 0.944046, 7.16688, 4.24704, 0.54984, 0.45504, 
        1683, 51.8963, 2.23266, 2.0769, 7.34384, 4.51248, 0.54984, 0.51192, 
        1684, 51.9273, 2.24438, 1.69928, 6.1936, 4.68944, 0.45504, 0.43608, 
        1685, 51.9573, 2.12132, 3.02095, 6.81296, 4.68944, 0.51192, 0.39816, 
        1686, 51.9873, 2.03342, 1.9825, 6.54752, 4.51248, 0.54984, 0.73944, 
        1687, 52.0203, 2.36744, 2.92654, 6.37056, 5.04336, 0.54984, 0.6636, 
        1688, 52.0503, 1.98068, 3.96499, 7.9632, 4.95488, 0.5688, 0.39816, 
        1689, 52.0823, 2.16234, 3.68178, 6.54752, 4.77792, 0.72048, 0.72048, 
        1690, 52.1133, 2.26782, 3.02095, 8.49408, 4.424, 0.5688, 0.73944, 
        1691, 52.1433, 2.4612, 1.79369, 8.05168, 4.51248, 0.64464, 1.25136, 
        1692, 52.1733, 2.39088, 1.51047, 8.67104, 4.424, 0.54984, 0.948, 
        1693, 52.2042, 2.39674, 1.13286, 8.848, 5.22032, 0.54984, 1.3272, 
        1694, 52.2352, 2.34986, 1.32166, 8.75952, 4.95488, 0.53088, 0.53088, 
        1695, 52.2652, 2.3147, 0.566428, 7.9632, 4.8664, 0.45504, 0.83424, 
        1696, 52.2952, 2.36158, 0.849641, 8.49408, 5.57424, 0.5688, 0.41712, 
        1697, 52.3262, 2.32642, 0.188809, 8.67104, 5.04336, 0.53088, 0.474, 
        1698, 52.3582, 2.32642, 3.02095, 7.5208, 5.13184, 0.54984, 0.64464, 
        1699, 52.3882, 2.32056, 1.88809, 7.43232, 5.22032, 0.474, 0.474, 
        1700, 52.4182, 2.60184, 3.39857, 5.92816, 4.95488, 0.41712, 0.5688, 
        1701, 52.4481, 2.13304, 2.36012, 6.636, 5.04336, 0.41712, 0.64464, 
        1702, 52.4781, 2.35572, 1.88809, 5.92816, 5.13184, 0.41712, 0.64464, 
        1703, 52.5082, 2.32642, 2.45452, 7.34384, 5.48576, 0.43608, 0.60672, 
        1704, 52.5431, 2.38502, 5.38106, 6.54752, 5.48576, 0.34128, 0.20856, 
        1705, 52.5741, 2.27954, 3.58737, 7.78624, 5.3088, 0.26544, 0.49296, 
        1706, 52.6041, 2.2854, 1.9825, 7.5208, 4.424, 0.32232, 0.36024, 
        1707, 52.6341, 2.42604, 1.03845, 8.31712, 5.3088, 0.24648, 0.2844, 
        1708, 52.6671, 2.36744, 0.377618, 7.78624, 4.60096, 0.22752, 0.60672, 
        1709, 52.6981, 2.59012, 0.283214, 8.4056, 4.95488, 0.17064, 0.2844, 
        1710, 52.7301, 2.16234, -0.566428, 8.4056, 5.22032, 0.13272, 0.32232, 
        1711, 52.7621, 2.22094, -0.660832, 7.0784, 5.3088, 0.15168, 0.58776, 
        1712, 52.7941, 2.17992, -0.566428, 5.22032, 4.8664, 0.32232, 0.34128, 
        1713, 52.8261, 2.26196, 0.472023, 4.424, 4.8664, 0.22752, 0.64464, 
        1714, 52.857, 2.17406, 0, 4.07008, 5.57424, 0.53088, 0.43608, 
        1715, 52.8881, 2.1389, 1.22726, 3.18528, 4.60096, 0.3792, 0.68256, 
        1716, 52.9211, 2.1975, 1.03845, 2.91984, 4.51248, 0.474, 0.49296, 
        1717, 52.9511, 2.30298, 1.60488, 4.33552, 4.24704, 0.49296, 0.53088, 
        1718, 52.983, 2.07444, 1.22726, 4.07008, 4.24704, 0.51192, 0.49296, 
        1719, 53.013, 2.1682, 1.9825, 4.424, 4.77792, 0.49296, 0.72048, 
        1720, 53.044, 2.24438, 2.0769, 3.27376, 4.77792, 0.53088, 0.45504, 
        1721, 53.074, 2.15648, 1.32166, 4.33552, 4.77792, 0.45504, 0.60672, 
        1722, 53.1049, 2.3147, 0, 4.60096, 4.07008, 0.43608, 1.3272, 
        1723, 53.1359, 2.15648, 0, 4.8664, 4.60096, 0.49296, 0.89112, 
        1724, 53.1669, 2.09202, -0.0944046, 4.68944, 3.89312, 0.39816, 1.47888, 
        1725, 53.197, 2.4905, 0, 4.68944, 3.89312, 0.36024, 0.34128, 
        1726, 53.227, 1.9631, -0.944046, 6.1936, 4.33552, 0.51192, 0.91008, 
        1727, 53.257, 2.27954, -0.660832, 5.57424, 4.15856, 0.64464, 0.45504, 
        1728, 53.2889, 2.2854, 0, 5.39728, 4.15856, 0.54984, 0.87216, 
        1729, 53.3209, 2.27368, 0.472023, 5.39728, 4.68944, 0.41712, 0.68256, 
        1730, 53.3519, 2.45534, 0, 5.66272, 3.71616, 0.45504, 0.948, 
        1731, 53.3839, 2.44362, 0.377618, 5.66272, 3.62768, 0.474, 0.98592, 
        1732, 53.4139, 2.43776, 1.51047, 5.57424, 3.71616, 0.41712, 1.11864, 
        1733, 53.4449, 2.41432, 0.660832, 6.10512, 4.15856, 0.41712, 1.19448, 
        1734, 53.4769, 2.56668, 1.32166, 6.37056, 3.80464, 0.43608, 1.15656, 
        1735, 53.5089, 2.0217, 0.755237, 5.39728, 4.15856, 0.474, 0.92904, 
        1736, 53.5408, 2.33814, 0.377618, 5.92816, 3.5392, 0.39816, 1.2324, 
        1737, 53.5728, 2.27954, -0.0944046, 6.37056, 3.71616, 0.49296, 1.11864, 
        1738, 53.6049, 2.3733, -0.377618, 6.90144, 4.07008, 0.474, 1.09968, 
        1739, 53.6358, 2.29126, -0.849641, 6.90144, 4.24704, 0.51192, 0.87216, 
        1740, 53.6679, 2.27954, -0.472023, 7.43232, 4.33552, 0.474, 0.89112, 
        1741, 53.6988, 2.19164, -0.566428, 6.81296, 4.07008, 0.53088, 0.83424, 
        1742, 53.7318, 2.09788, -0.283214, 6.98992, 4.68944, 0.54984, 1.25136, 
        1743, 53.7638, 2.17406, -0.0944046, 6.37056, 4.95488, 0.53088, 0.96696, 
        1744, 53.7958, 2.26196, 0.377618, 4.95488, 4.15856, 0.70152, 1.2324, 
        1745, 53.8288, 2.25024, 1.03845, 4.8664, 4.15856, 0.54984, 0.91008, 
        1746, 53.8588, 2.12132, 2.26571, 2.74288, 4.07008, 0.62568, 0.92904, 
        1747, 53.8888, 2.39088, 2.0769, 4.424, 4.95488, 0.49296, 1.422, 
        1748, 53.9188, 2.07444, 1.13286, 4.24704, 4.8664, 0.3792, 1.45992, 
        1749, 53.9487, 1.98068, 3.77618, 4.8664, 3.89312, 0.2844, 1.3272, 
        1750, 53.9787, 2.38502, 3.11535, 4.8664, 4.60096, 0.49296, 1.11864, 
        1751, 54.0098, 2.00998, 2.54892, 6.54752, 4.8664, 0.26544, 1.49784, 
        1752, 54.0397, 2.1682, 2.0769, 5.66272, 5.04336, 0.32232, 1.49784, 
        1753, 54.0697, 2.26782, 1.22726, 7.0784, 4.77792, 0.30336, 1.95288, 
        1754, 54.0997, 2.29126, 0, 5.83968, 5.22032, 0.20856, 2.44584, 
        1755, 54.1297, 2.22094, -0.472023, 7.34384, 4.77792, 0.30336, 2.14248, 
        1756, 54.1617, 2.23852, -0.472023, 6.81296, 4.8664, 0.2844, 2.21832, 
        1757, 54.1917, 2.52566, -0.566428, 6.98992, 5.22032, 0.34128, 2.71128, 
        1758, 54.2237, 2.4026, -0.944046, 5.66272, 5.22032, 0.3792, 2.25624, 
        1759, 54.2556, 2.1682, 0.283214, 5.83968, 4.51248, 0.53088, 1.8012, 
        1760, 54.2877, 2.20922, 1.13286, 5.22032, 4.24704, 0.474, 1.17552, 
        1761, 54.3187, 2.45534, 0.755237, 5.04336, 4.77792, 0.41712, 0.948, 
        1762, 54.3517, 2.44362, 1.32166, 5.83968, 4.60096, 0.36024, 1.15656, 
        1763, 54.3826, 2.44362, 1.9825, 5.04336, 5.3088, 0.34128, 0.91008, 
        1764, 54.4136, 2.4319, 2.64333, 5.57424, 5.04336, 0.53088, 0.60672, 
        1765, 54.4446, 2.34986, 3.02095, 6.54752, 5.66272, 0.32232, 0.49296, 
        1766, 54.4766, 2.3733, 1.79369, 6.636, 5.39728, 0.474, 0.474, 
        1767, 54.5076, 2.25024, 1.22726, 6.28208, 4.8664, 0.43608, 0.43608, 
        1768, 54.5396, 2.27954, 0.377618, 7.34384, 5.3088, 0.22752, 0.6636, 
        1769, 54.5716, 2.2561, -0.0944046, 6.1936, 5.22032, 0.43608, 0.6636, 
        1770, 54.6036, 2.44948, -0.472023, 6.54752, 4.8664, 0.51192, 0.58776, 
        1771, 54.6336, 2.00998, -0.849641, 8.31712, 5.48576, 0.32232, 0.36024, 
        1772, 54.6646, 2.30298, -1.13286, 7.69776, 4.60096, 0.5688, 0.6636, 
        1773, 54.6945, 2.2268, -1.13286, 6.54752, 4.77792, 0.53088, 0.6636, 
        1774, 54.7256, 2.12132, -1.9825, 4.8664, 4.77792, 0.39816, 0.62568, 
        1775, 54.7595, 2.06272, -1.03845, 4.68944, 4.51248, 0.474, 0.41712, 
        1776, 54.7895, 2.00998, -0.283214, 3.0968, 4.60096, 0.41712, 0.62568, 
        1777, 54.8195, 2.27368, 0.283214, 2.6544, 5.3088, 0.68256, 0.62568, 
        1778, 54.8525, 2.39088, -0.472023, 2.74288, 4.8664, 0.41712, 0.43608, 
        1779, 54.8824, 2.03342, 1.51047, 2.74288, 4.68944, 0.45504, 0.43608, 
        1780, 54.9125, 2.29712, 0, 3.36224, 4.424, 0.49296, 0.474, 
        1781, 54.9424, 1.98654, 0.377618, 1.7696, 4.60096, 0.49296, 0.36024, 
        1782, 54.9735, 2.32642, 0.755237, 3.0968, 4.95488, 0.474, 0.64464, 
        1783, 55.0035, 2.27954, 0.849641, 3.62768, 5.22032, 0.474, 0.68256, 
        1784, 55.0334, 2.4026, -0.188809, 2.47744, 5.13184, 0.43608, 0.62568, 
        1785, 55.0634, 1.98654, -0.849641, 3.27376, 4.8664, 0.34128, 0.68256, 
        1786, 55.0934, 1.9631, -1.32166, 3.27376, 4.07008, 0.43608, 0.64464, 
        1787, 55.1234, 1.97482, -1.51047, 3.45072, 3.89312, 0.39816, 1.06176, 
        1788, 55.1534, 2.3147, -1.41607, 3.80464, 3.89312, 0.32232, 1.00488, 
        1789, 55.1834, 2.18578, -1.9825, 4.68944, 3.89312, 0.34128, 0.87216, 
        1790, 55.2134, 2.30298, -1.79369, 4.15856, 4.07008, 0.32232, 1.40304, 
        1791, 55.2434, 1.9631, -1.13286, 3.9816, 3.89312, 0.26544, 0.948, 
        1792, 55.2734, 2.3147, -0.944046, 4.68944, 4.8664, 0.22752, 0.81528, 
        1793, 55.3034, 2.16234, -0.755237, 2.30048, 4.68944, 0.26544, 0.6636, 
        1794, 55.3334, 2.2854, -0.849641, 4.424, 4.51248, 0.32232, 0.58776, 
        1795, 55.3633, 2.344, -0.188809, 4.33552, 4.33552, 0.36024, 0.53088, 
        1796, 55.3933, 2.27368, -1.03845, 3.9816, 4.51248, 0.30336, 0.5688, 
        1797, 55.4233, 2.09202, 0.566428, 4.07008, 4.07008, 0.15168, 0.60672, 
        1798, 55.4533, 2.33814, 0.283214, 4.15856, 4.07008, 0.0948, 0.6636, 
        1799, 55.4833, 2.2561, -0.472023, 3.9816, 3.45072, 0.0948, 0.64464, 
        1800, 55.5133, 2.2561, -0.566428, 4.60096, 3.71616, 0.0948, 0.72048, 
        1801, 55.5443, 2.33814, -0.660832, 4.77792, 3.89312, 0.20856, 0.49296, 
        1802, 55.5743, 2.20922, -0.944046, 4.77792, 4.15856, 0.24648, 0.64464, 
        1803, 55.6043, 2.30298, -1.79369, 4.33552, 3.80464, 0.22752, 0.39816, 
        1804, 55.6343, 2.27954, -1.51047, 4.8664, 4.15856, 0.20856, 0.58776, 
        1805, 55.6642, 2.18578, -1.69928, 5.22032, 4.15856, 0.22752, 0.79632, 
        1806, 55.6942, 2.18578, -2.0769, 5.04336, 4.07008, 0.26544, 0.72048, 
        1807, 55.7242, 2.13304, -1.32166, 4.68944, 4.15856, 0.32232, 0.7584, 
        1808, 55.7542, 2.14476, -2.26571, 5.48576, 4.15856, 0.36024, 0.7584, 
        1809, 55.7842, 2.10374, -1.41607, 5.48576, 4.24704, 0.3792, 0.77736, 
        1810, 55.8142, 2.2268, -1.79369, 5.22032, 4.07008, 0.474, 0.70152, 
        1811, 55.8442, 2.0217, -1.41607, 4.60096, 3.9816, 0.51192, 0.73944, 
        1812, 55.8762, 2.00412, -1.41607, 5.92816, 4.07008, 0.51192, 0.77736, 
        1813, 55.9062, 1.89278, -0.849641, 4.77792, 4.07008, 0.64464, 0.72048, 
        1814, 55.9362, 2.14476, -1.32166, 3.71616, 4.24704, 0.6636, 0.73944, 
        1815, 55.9662, 1.88692, -0.188809, 4.07008, 4.51248, 0.77736, 0.72048, 
        1816, 55.9962, 1.95724, -0.849641, 4.60096, 5.04336, 0.3792, 0.36024, 
        1817, 56.0262, 2.17406, -0.472023, 1.7696, 5.04336, 0.43608, 0.3792, 
        1818, 56.0562, 2.12718, 0.849641, 3.71616, 4.77792, 0.54984, 0.43608, 
        1819, 56.0862, 1.95724, 0.472023, 2.03504, 5.04336, 0.8532, 0.45504, 
        1820, 56.1181, 2.0217, 0.377618, 4.15856, 4.77792, 1.00488, 0.51192, 
        1821, 56.1481, 2.10374, 1.88809, 3.71616, 5.04336, 0.36024, 0.81528, 
        1822, 56.1781, 2.09788, 0, 4.60096, 4.77792, 0.68256, 0.72048, 
        1823, 56.2091, 2.09202, 1.32166, 3.0968, 4.24704, 0.62568, 0.45504, 
        1824, 56.2391, 2.1389, 0.755237, 4.95488, 4.51248, 0.81528, 0.41712, 
        1825, 56.2692, 2.18578, -0.472023, 4.51248, 4.33552, 0.5688, 0.49296, 
        1826, 56.3001, 2.16234, 0.755237, 5.48576, 5.04336, 0.45504, 0.83424, 
        1827, 56.3301, 2.0803, -0.849641, 5.13184, 5.13184, 0.36024, 0.98592, 
        1828, 56.3601, 1.98068, -1.51047, 5.04336, 4.95488, 0.3792, 1.09968, 
        1829, 56.3901, 2.06272, -0.755237, 5.22032, 5.04336, 0.51192, 1.15656, 
        1830, 56.42, 2.29712, -1.03845, 4.77792, 5.3088, 0.64464, 1.38408, 
        1831, 56.4501, 2.27954, -2.45452, 6.54752, 5.48576, 0.68256, 1.38408, 
        1832, 56.48, 2.05686, -1.41607, 5.13184, 5.22032, 0.62568, 0.8532, 
        1833, 56.51, 2.05686, -1.69928, 5.7512, 4.424, 0.62568, 1.7064, 
        1834, 56.54, 2.22094, -1.22726, 6.10512, 4.33552, 0.54984, 1.6116, 
        1835, 56.5701, 2.12132, -0.566428, 4.68944, 4.68944, 0.5688, 1.38408, 
        1836, 56.601, 2.26196, -1.41607, 5.04336, 5.66272, 0.43608, 1.2324, 
        1837, 56.632, 1.93966, -0.472023, 4.60096, 5.22032, 0.58776, 1.19448, 
        1838, 56.664, 2.15648, 0.660832, 3.9816, 5.83968, 0.60672, 1.28928, 
        1839, 56.694, 2.07444, -0.755237, 5.22032, 5.66272, 0.62568, 1.15656, 
        1840, 56.724, 2.2268, 0.660832, 5.48576, 5.83968, 0.39816, 1.36512, 
        1841, 56.754, 2.06858, 2.0769, 4.77792, 5.66272, 0.36024, 1.45992, 
        1842, 56.784, 2.20922, 0.944046, 4.77792, 5.7512, 0.34128, 1.45992, 
        1843, 56.814, 2.01584, 0, 4.51248, 4.95488, 0.49296, 1.47888, 
        1844, 56.844, 1.95724, 2.36012, 3.5392, 5.22032, 0.49296, 1.59264, 
        1845, 56.874, 1.91036, -0.188809, 4.51248, 5.04336, 0.62568, 1.64952, 
        1846, 56.908, 2.1096, 1.69928, 4.8664, 5.39728, 0.45504, 1.78224, 
        1847, 56.938, 2.2561, 0.849641, 6.28208, 5.22032, 0.49296, 1.55472, 
        1848, 56.971, 2.051, -1.22726, 5.48576, 5.39728, 0.60672, 1.66848, 
        1849, 57.0009, 2.13304, -0.472023, 4.95488, 5.66272, 0.474, 2.00976, 
        1850, 57.0309, 2.06272, -0.755237, 5.48576, 5.7512, 0.30336, 1.6116, 
        1851, 57.0619, 1.9924, 0.566428, 6.01664, 4.77792, 0.58776, 1.64952, 
        1852, 57.0929, 2.32056, -1.32166, 6.81296, 5.66272, 0.32232, 1.30824, 
        1853, 57.1229, 2.2854, -0.849641, 5.7512, 5.92816, 0.2844, 1.25136, 
        1854, 57.1549, 2.37916, -0.755237, 6.81296, 5.92816, 0.3792, 1.2324, 
        1855, 57.1879, 2.32642, -1.9825, 6.54752, 5.39728, 0.68256, 1.08072, 
        1856, 57.2179, 2.10374, -0.944046, 7.5208, 5.13184, 0.60672, 1.19448, 
        1857, 57.2538, 1.85176, -0.849641, 8.848, 4.95488, 0.53088, 0.96696, 
        1858, 57.2839, 1.91036, -1.88809, 5.92816, 4.8664, 0.62568, 1.40304, 
        1859, 57.3138, 2.1975, -0.944046, 6.98992, 4.95488, 0.54984, 1.422, 
        1860, 57.3438, 2.26782, -0.566428, 5.22032, 4.95488, 0.51192, 1.422, 
        1861, 57.3749, 2.05686, -1.88809, 4.95488, 5.13184, 0.39816, 1.53576, 
        1862, 57.4069, 2.1975, -1.22726, 5.48576, 5.57424, 0.3792, 1.3272, 
        1863, 57.4378, 1.84004, -1.41607, 4.424, 4.77792, 0.20856, 1.0428, 
        1864, 57.4688, 1.86934, -1.32166, 4.07008, 4.95488, 0.5688, 1.38408, 
        1865, 57.4987, 2.0217, -1.69928, 4.60096, 5.3088, 0.53088, 1.34616, 
        1866, 57.5287, 2.13304, -0.944046, 4.51248, 5.04336, 0.36024, 1.27032, 
        1867, 57.5588, 2.20922, -2.17131, 4.07008, 5.7512, 0.26544, 1.2324, 
        1868, 57.5887, 2.02756, -0.944046, 4.51248, 5.22032, 0.34128, 1.28928, 
        1869, 57.6188, 1.99826, -0.755237, 5.66272, 5.13184, 0.1896, 1.25136, 
        1870, 57.6497, 1.9631, -0.755237, 3.71616, 4.424, 0.53088, 0.92904, 
        1871, 57.6797, 1.91622, 0.472023, 3.62768, 5.13184, 0.474, 0.91008, 
        1872, 57.7097, 1.8752, 0, 2.47744, 5.22032, 0.64464, 1.02384, 
        1873, 57.7397, 1.89278, -1.41607, 2.38896, 4.95488, 0.64464, 1.00488, 
        1874, 57.7707, 2.36744, 0.566428, 2.56592, 5.04336, 0.3792, 0.70152, 
        1875, 57.8007, 1.82246, 0.944046, 1.85808, 4.77792, 0.34128, 0.70152, 
        1876, 57.8307, 1.8459, -0.660832, 2.74288, 5.13184, 0.54984, 0.77736, 
        1877, 57.8606, 1.9338, 0.944046, 1.59264, 4.77792, 0.64464, 0.87216, 
        1878, 57.8907, 1.98068, 1.41607, 1.94656, 5.13184, 0.68256, 1.27032, 
        1879, 57.9207, 2.01584, -0.944046, 2.03504, 4.77792, 0.8532, 1.28928, 
        1880, 57.9506, 1.85762, -0.566428, 2.38896, 5.57424, 0.58776, 1.21344, 
        1881, 57.9817, 2.0217, -1.60488, 2.38896, 4.68944, 0.58776, 1.25136, 
        1882, 58.0116, 1.86934, -0.188809, 2.83136, 4.51248, 0.51192, 1.19448, 
        1883, 58.0436, 1.9631, -0.188809, 1.23872, 4.60096, 0.64464, 1.47888, 
        1884, 58.0746, 2.36744, -1.32166, 2.56592, 5.22032, 0.5688, 1.5168, 
        1885, 58.1046, 2.09788, -1.88809, 2.83136, 5.39728, 0.474, 1.45992, 
        1886, 58.1346, 2.12132, -2.0769, 2.212, 4.07008, 0.474, 1.38408, 
        1887, 58.1646, 1.85762, -0.377618, 2.12352, 4.07008, 0.51192, 1.53576, 
        1888, 58.1946, 1.74042, 1.9825, 3.0968, 4.424, 0.64464, 0.96696, 
        1889, 58.2246, 1.65252, 2.0769, 2.30048, 4.60096, 0.64464, 1.11864, 
        1890, 58.2546, 1.85762, 2.26571, 2.212, 4.77792, 0.73944, 1.15656, 
        1891, 58.2846, 2.00412, -0.283214, 1.41568, 5.3088, 0.79632, 1.1376, 
        1892, 58.3145, 1.89278, -0.472023, 1.15024, 5.57424, 0.79632, 1.17552, 
        1893, 58.3445, 1.93966, -1.32166, 1.41568, 4.95488, 0.87216, 1.15656, 
        1894, 58.3745, 1.56462, -1.22726, 1.3272, 5.22032, 0.81528, 1.21344, 
        1895, 58.4045, 1.5822, -1.79369, 1.41568, 5.04336, 0.81528, 1.30824, 
        1896, 58.4345, 1.95724, -1.88809, 2.91984, 5.13184, 0.89112, 1.422, 
        1897, 58.4645, 1.93966, -2.45452, 3.36224, 5.22032, 0.72048, 1.5168, 
        1898, 58.4945, 2.09202, -4.43702, 3.36224, 3.9816, 0.81528, 1.49784, 
        1899, 58.5245, 2.32056, -4.43702, 2.6544, 3.9816, 0.87216, 1.59264, 
        1900, 58.5545, 1.97482, -4.53142, 2.56592, 4.15856, 0.79632, 1.76328, 
        1901, 58.5845, 1.94552, -5.00344, 3.45072, 4.60096, 0.8532, 1.87704, 
        1902, 58.6155, 2.06858, -6.51392, 3.89312, 5.04336, 0.60672, 2.21832, 
        1903, 58.6455, 1.7287, -5.38106, 4.15856, 5.04336, 0.62568, 2.12352, 
        1904, 58.6754, 1.78144, -6.1363, 3.45072, 4.8664, 0.6636, 1.87704, 
        1905, 58.7054, 1.8166, -6.32511, 2.91984, 4.51248, 0.6636, 1.83912, 
        1906, 58.7354, 1.8166, -6.32511, 3.89312, 4.95488, 0.5688, 1.66848, 
        1907, 58.7674, 1.62322, -6.2307, 5.13184, 4.60096, 0.49296, 1.63056, 
        1908, 58.7975, 1.65838, -6.60832, 3.9816, 4.60096, 0.5688, 1.8012, 
        1909, 58.8284, 1.76972, -5.00344, 4.95488, 3.71616, 0.81528, 1.68744, 
        1910, 58.8584, 1.9338, -5.00344, 5.3088, 4.33552, 0.87216, 1.8012, 
        1911, 58.8894, 1.98654, -5.19225, 5.13184, 4.07008, 0.81528, 1.91496, 
        1912, 58.9214, 2.11546, -4.24821, 2.83136, 4.424, 0.72048, 2.00976, 
        1913, 58.9534, 2.07444, -3.77618, 2.56592, 3.9816, 0.83424, 2.0856, 
        1914, 58.9844, 1.83418, -3.58737, 2.91984, 3.80464, 0.89112, 2.19936, 
        1915, 59.0174, 1.76972, -3.49297, 1.59264, 4.60096, 0.39816, 2.57856, 
        1916, 59.0494, 1.72284, -3.49297, 1.3272, 4.8664, 0.58776, 2.59752, 
        1917, 59.0814, 1.74628, -3.58737, 0.61936, 3.0968, 0.58776, 2.50272, 
        1918, 59.1134, 1.68182, -3.49297, 0.79632, 3.00832, 0.60672, 2.21832, 
        1919, 59.1454, 1.62908, -3.58737, 0, 2.91984, 0.32232, 1.78224, 
        1920, 59.1763, 1.59392, -3.39857, -0.08848, 2.38896, 0.22752, 1.55472, 
        1921, 59.2093, 1.4064, -2.0769, -0.70784, 2.56592, 0, 1.57368, 
        1922, 59.2393, 1.0548, -2.17131, 0, 1.7696, 0.03792, 1.09968, 
        1923, 59.2703, 0.77938, -2.36012, -0.17696, 1.85808, -0.15168, 1.19448, 
        1924, 59.3023, 0.59772, -0.849641, -0.61936, 1.7696, -0.17064, 1.02384, 
        1925, 59.3323, 0.3809, -0.660832, -1.15024, 1.7696, -0.13272, 0.87216, 
        1926, 59.3633, 0.16994, -2.64333, -0.79632, 0.53088, -0.11376, 0.474, 
        1927, 59.3933, 0.10548, -1.41607, -1.23872, 0.4424, -0.03792, 0.30336, 
        1928, 59.4233, -0.0293, -1.79369, -1.50416, 0.17696, -0.0948, 0.24648, 
        1929, 59.4543, -0.0879, -1.03845, -2.30048, 1.06176, -0.45504, 0.24648, 
        1930, 59.4863, -0.12306, -0.849641, -2.30048, 0.17696, -0.01896, 0, 
        1931, 59.5162, -0.1465, -1.13286, -2.83136, 0, 0, -0.01896, 
        1932, 59.5463, -0.10548, -1.69928, -3.18528, 0, 0, 0, 
        1933, 59.5762, -0.08204, -0.566428, -3.27376, 0, 0.17064, -0.05688, 
        1934, 59.6062, -0.13478, -0.660832, -3.5392, 0, 0.1896, -0.0948, 
        1935, 59.6362, -0.15236, -3.96499, -3.9816, 0, 0.30336, -0.0948, 
        1936, 59.6672, -0.1758, -3.39857, -3.45072, -0.08848, 0, -0.53088, 
        1937, 59.6972, -0.16408, -3.39857, -3.45072, -0.08848, 0.15168, -0.6636, 
        1938, 59.7272, -0.15236, -3.20976, -3.9816, 0, 0.17064, -0.81528, 
        1939, 59.7572, -0.12892, -3.39857, -4.33552, 0.53088, 0.2844, -1.00488, 
        1940, 59.7872, -0.18166, -3.30416, -4.60096, 0.79632, 0.22752, -1.06176, 
        1941, 59.8172, -0.1758, -3.39857, -4.77792, 1.15024, 0.17064, -1.21344, 
        1942, 59.8482, -0.1758, -4.53142, -5.66272, 0.53088, -0.17064, -1.09968, 
        1943, 59.8782, -0.1758, -4.72023, -6.10512, 0.79632, -0.24648, -1.2324, 
        1944, 59.9112, -0.19924, -5.38106, -6.28208, 1.41568, -0.20856, -1.36512, 
        1945, 59.9421, -0.1758, -6.04189, -6.54752, 1.50416, -0.32232, -1.45992, 
        1946, 59.9731, -0.16994, -5.38106, -6.10512, 1.59264, -0.07584, -1.72536, 
        1947, 60.0041, -0.1758, -5.66428, -6.1936, 0.8848, -0.13272, -1.40304, 
        1948, 60.0342, -0.1758, -6.2307, -7.16688, 1.06176, 0, -0.83424, 
        1949, 60.0661, -0.16994, -6.89154, -7.69776, 0.8848, 0, -0.98592, 
        1950, 60.0991, -0.19338, -6.79713, -7.60928, 0.17696, 0.26544, -0.89112, 
        1951, 60.1291, -0.1758, -6.2307, -7.16688, 0, 0.07584, -0.3792, 
        1952, 60.1601, -0.18752, -7.36356, -8.22864, 0, 0.22752, -0.5688, 
        1953, 60.1901, -0.1758, -7.36356, -8.49408, 0, 0.30336, -0.54984, 
        1954, 60.2221, -0.19338, -7.55237, -9.02496, 0, 0.32232, -0.34128, 
        1955, 60.253, -0.15822, -7.45796, -8.31712, 0, 0.22752, -0.01896, 
        1956, 60.2831, -0.16994, -7.45796, -8.31712, 0, 0.26544, 0.22752, 
        1957, 60.3151, -0.16994, -8.49641, -8.4056, 0, 0.1896, 0.26544, 
        1958, 60.3451, -0.16408, -8.59082, -9.11344, 0.26544, 0, 0.2844, 
        1959, 60.3771, -0.18166, -8.59082, -9.20192, 0.8848, 0, 0.43608, 
        1960, 60.41, -0.18166, -8.68522, -9.11344, 1.41568, -0.03792, 0.474, 
        1961, 60.444, -0.1758, -9.81808, -9.90976, 2.212, -0.24648, 0.39816, 
        1962, 60.474, -0.18752, -9.81808, -9.82128, 1.59264, -0.32232, 0.39816, 
        1963, 60.504, -0.16408, -9.81808, -10.3522, 0.97328, -0.3792, 0.5688, 
        1964, 60.534, -0.16408, -10.3845, -9.90976, 0.17696, -0.11376, 0.54984, 
        1965, 60.564, -0.18166, -10.7621, -8.848, 0.17696, 0, 0.62568, 
        1966, 60.594, -0.16408, -10.9509, -8.4056, 0.17696, 0.26544, 0.73944, 
        1967, 60.624, -0.16994, -11.1397, -8.31712, 0, 0.22752, 0.83424, 
        1968, 60.6549, -0.16994, -11.1397, -8.848, -0.08848, 0, 1.19448, 
        1969, 60.6859, -0.15822, -11.1397, -7.69776, -0.61936, 0.26544, 1.08072;

    Eigen::Matrix<double, 6, 1> torque_initial;
    torque_initial = manip.getTorqueByAngle();

    while(nh.ok())
    {
        tfPublisher.publish();

        for(int i = 0; i < manip.getInverseKinematicsNum(); i++)
        {
            tfPublisher.publish("manipulator_base_link", "TargetPose"+std::to_string(i), manip.getTargetPose(i));
            tfPublisher.publish("manipulator_base_link", "MidTargetPose"+std::to_string(i), manip.getMidPose(i));
        }

        // /* Time Measure */
        // start = ros::Time::now();
        // manip.torque2Angle(manip.getTorqueByAngle());    // callBack(){manip.setAngle(msg);} while(){pub.publish(manip.getAngularVelocity());}
        // end = ros::Time::now();
        // sum += (end - start).toSec();
        // cycle++;
        // std::cout << cycle << std::endl;

        if(free_fall)
        {
            /* check Motion Equation */
            manip.getMf();
            manip.getCf();
            manip.getNf();
            manip.torque2Angle(Eigen::Matrix<double, 6, 1>::Zero());
            // manip.torque2Angle((torque_data.block(cycle, 2, 1, 6) - torque_data.block(0, 2, 1, 6)).transpose() + torque_initial);
            cycle++;
        }

        else
        {
            target_angular_velocity.data = EigenUtility.matrix2Array(manip.getAngularVelocity());
            target_torque.data = EigenUtility.matrix2Array(manip.getTorqueByAngle());
            target_angular_velocity_pub.publish(target_angular_velocity);
            target_torque_pub.publish(target_torque);
        }

        manip.print();

        ros::spinOnce();
        loop_rate.sleep();
    }

    // std::cout << "time: " << sum << "\tcycle: " << cycle << "\tmean time: " << sum/cycle << std::endl << std::endl;

    return 0;
}